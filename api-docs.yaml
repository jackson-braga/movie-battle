openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8080
  description: Generated server url
paths:
  /api/battle/{batter_id}/round/{round_id}/answer:
    put:
      tags:
      - battle-controller
      operationId: answer
      parameters:
      - name: batter_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: round_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Movie'
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: string
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: string
        "422":
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AnswerTdo'
  /api/battle/{batter_id}/end:
    put:
      tags:
      - battle-controller
      operationId: end
      parameters:
      - name: batter_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: string
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: string
        "422":
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Battle'
  /api/battle/start:
    post:
      tags:
      - battle-controller
      operationId: start
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: string
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: string
        "422":
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Battle'
  /api/authenticate:
    post:
      tags:
      - authentication-controller
      operationId: createAuthenticationToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticationDto'
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: string
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: string
        "422":
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthenticationTokenDto'
  /api/ranking:
    get:
      tags:
      - ranking-controller
      operationId: rankgin
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: string
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: string
        "422":
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ranking'
  /api/battle/{batter_id}/round:
    get:
      tags:
      - battle-controller
      operationId: round
      parameters:
      - name: batter_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: string
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: string
        "422":
          description: Unprocessable Entity
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Round'
components:
  schemas:
    Movie:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
    AnswerTdo:
      type: object
      properties:
        choice:
          $ref: '#/components/schemas/Movie'
        status:
          type: string
          enum:
          - CURRENT
          - SUCCESS
          - FAILD
        nextRound:
          $ref: '#/components/schemas/Round'
        _links:
          $ref: '#/components/schemas/Links'
    Battle:
      type: object
      properties:
        id:
          type: integer
          format: int64
        player:
          $ref: '#/components/schemas/Player'
        status:
          type: string
          enum:
          - STARTED
          - FINISHED
        _links:
          $ref: '#/components/schemas/Links'
    Links:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Link'
    Player:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    Round:
      type: object
      properties:
        id:
          type: integer
          format: int64
        battle:
          $ref: '#/components/schemas/Battle'
        first:
          $ref: '#/components/schemas/Movie'
        second:
          $ref: '#/components/schemas/Movie'
        status:
          type: string
          enum:
          - CURRENT
          - SUCCESS
          - FAILD
        _links:
          $ref: '#/components/schemas/Links'
    AuthenticationDto:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    AuthenticationTokenDto:
      type: object
      properties:
        token:
          type: string
        _links:
          $ref: '#/components/schemas/Links'
    Ranking:
      type: object
      properties:
        id:
          type: integer
          format: int64
        player:
          $ref: '#/components/schemas/Player'
        score:
          type: number
          format: double
    Link:
      type: object
      properties:
        href:
          type: string
        hreflang:
          type: string
        title:
          type: string
        type:
          type: string
        deprecation:
          type: string
        profile:
          type: string
        name:
          type: string
        templated:
          type: boolean
